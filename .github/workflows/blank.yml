name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgresql:
        image: postgres:12-alpine
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASS }}
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -d ${{ secrets.PG_DB }} -U ${{ secrets.PG_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker images
      run: |
        docker-compose build
        docker-compose push

    - name: Start Docker Compose
      run: |
        docker-compose up -d

    - name: Run tests
      run: |
        docker-compose exec server pytest  # Adjust with your test command

    - name: Shut down Docker Compose
      if: always()
      run: |
        docker-compose down
